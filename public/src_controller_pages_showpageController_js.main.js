"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunklistapp"] = self["webpackChunklistapp"] || []).push([["src_controller_pages_showpageController_js"],{

/***/ "./src/controller/pages/showpageController.js":
/*!****************************************************!*\
  !*** ./src/controller/pages/showpageController.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"showShowpage\": () => (/* binding */ showShowpage)\n/* harmony export */ });\n//閲覧ページ\nconst showShowpage = async () => {\n    \n    const url = new URL(window.location.href);\n    // URLSearchParamsオブジェクトを取得\n    const params = url.searchParams;\n    // getメソッド\n    const uid = params.get('id');\n\n    // プロフィールの取得\n    const { getUserData } = await __webpack_require__.e(/*! import() */ \"src_model_userModel_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../model/userModel */ \"./src/model/userModel.js\"));\n    const userData = await getUserData(uid);\n\n    document.getElementById('show-icon').src = userData.user_icon;\n    document.getElementById('show-name').innerHTML = userData.user_name;\n    document.getElementById('show-title').innerHTML = userData.user_title;\n    document.getElementById('show-bio-text').innerHTML = userData.user_bio;\n\n    // 登録リストの取得\n    const { getLists } = await __webpack_require__.e(/*! import() */ \"src_model_listModel_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../model/listModel */ \"./src/model/listModel.js\"));\n    let lists = await getLists(uid);\n    \n    if (lists.length == 0) {\n        document.getElementById('show-list-unregistered').style.display = 'block';\n    } else {\n        document.getElementById('show-list-unregistered').style.display = 'none';\n    }\n\n    setEvents(userData.twitter_disp_id);\n    setLists(lists, uid, userData.twitter_sys_id);\n\n    document.getElementById('top-page').style.display = 'none';\n    document.getElementById('my-page').style.display = 'none';\n    document.getElementById('show-page').style.display = 'block';\n    document.getElementById('how-page').style.display = 'none';\n}\n\nconst setEvents = (id) => {\n    // ---------- twitterボタン押下時 ----------\n    document.getElementById('show-prof').onclick = () => {\n        location.href = 'https://twitter.com/' + id;\n    };\n}\n\n// listsをHTMLに追加\nconst setLists = async (lists, uid, twitterID) => {\n    document.getElementById('yet-list-container').innerHTML = '';\n    document.getElementById('done-list-container').innerHTML = '';\n\n    let yetLists = lists.filter(list => !list.check && !list.removed);\n    yetLists.sort((a, b) => a.order - b.order);\n    yetLists.forEach(list => {\n        addList(list.id, list.name, list.check, uid, twitterID);\n    });\n\n    let doneLists = lists.filter(list => list.check && !list.removed);\n    doneLists.forEach(list => {\n        addList(list.id, list.name, list.check);\n    });\n}\n\nconst addList = async (id, name, check, uid, twitterID) => {\n    let listParent = document.createElement('div');\n    listParent.setAttribute('class', 'list-parent');\n    listParent.setAttribute('id', 'id-' + id);\n\n    let listDelete = document.createElement('div');\n    listDelete.setAttribute('class', 'list-delete-button');\n    listParent.appendChild(listDelete);\n\n    let listWrapper = document.createElement('div');\n    listWrapper.setAttribute('class', 'list-wrapper');\n    listParent.appendChild(listWrapper);\n\n    let checkBox = document.createElement('img');\n    if (check) {\n        checkBox.setAttribute('src', './data/done.svg');\n        checkBox.setAttribute('class', 'list-check-box-done');\n    } else {\n        checkBox.setAttribute('src', './data/yet.svg');\n        checkBox.setAttribute('class', 'list-check-box-yet');\n    }\n    \n    listWrapper.appendChild(checkBox);\n\n    let textBox = document.createElement('div');\n    textBox.setAttribute('class', 'list-text-box');\n    \n    let listText = document.createTextNode(name);\n    textBox.appendChild(listText);\n\n    // チェック有無で表示切り替え\n    if (check) {\n        textBox.style.color = '#C3C3C3';\n    } else {\n        textBox.style.color = '#000';\n    }\n    listWrapper.appendChild(textBox);\n\n    // 行きたいボタン\n    if (!check) {\n        let inviteLink = document.createElement('a');\n        let shareLink = 'https://twitter.com/messages/compose?';\n        shareLink += 'recipient_id=' + twitterID;\n        shareLink += '&text=' + 'https://campa-room.web.app/show?id=' + uid + \"%0A\";\n        shareLink += '行きたいとこリストからの送信%0A' + name + 'に一緒に行きませんか?'\n        inviteLink.setAttribute('href', shareLink);\n\n        let inviteButton = document.createElement('img');\n        inviteButton.setAttribute('src', './data/invite.svg');\n        inviteButton.setAttribute('class', 'show-invite-button-img');\n        inviteLink.appendChild(inviteButton);\n        listWrapper.appendChild(inviteLink);\n    }\n\n    listWrapper.ontouchstart = (e) => {\n        listWrapper.style.background = '#EEEEEE';\n    };\n    listWrapper.ontouchend = () => {\n        listWrapper.style.background = '#FFFFFF';\n    };\n\n    let listContainer;\n    if (check) {\n        listContainer = document.getElementById('show-done-list-container');\n    } else {\n        listContainer = document.getElementById('show-yet-list-container');\n    }\n    \n    listContainer.prepend(listParent);\n}\n\n//# sourceURL=webpack://listapp/./src/controller/pages/showpageController.js?");

/***/ })

}]);