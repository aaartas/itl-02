"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunklistapp"] = self["webpackChunklistapp"] || []).push([["src_controller_pages_mypageController_js"],{

/***/ "./src/controller/pages/mypageController.js":
/*!**************************************************!*\
  !*** ./src/controller/pages/mypageController.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"showMypage\": () => (/* binding */ showMypage)\n/* harmony export */ });\n// マイページ\nconst showMypage = () => {\n    // ajaxでHTMLを挿入\n    const request = new XMLHttpRequest();\n    request.open('GET', '/template/mypage.html', true);\n    request.onload = () => {\n        if (request.status >= 200 && request.status < 400) {\n            const restxt=request.responseText;\n\t\t\tdocument.getElementById('main').innerHTML = restxt;\n            \n            showMypage__();\n        }\n    };\n    request.send();\n}\n\nlet mode;\nlet uid;\nlet userData = [];\nlet preUserData = [];\nlet lists = [];\nlet preLists = [];\nlet yetLists = [];\nlet doneLists = [];\n\nconst showMypage__ = async () => {\n    mode = 'view';\n    \n    const { getAuth, onAuthStateChanged } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_firebase_app_dist_esm_index_esm2017_js\"), __webpack_require__.e(\"vendors-node_modules_firebase_auth_dist_index_esm_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! firebase/auth */ \"./node_modules/firebase/auth/dist/index.esm.js\"));\n    const { routing } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../pageController */ \"./src/controller/pageController.js\"));\n\n    // ---------- マイページアクセス時 ----------\n    // ログイン状態の確認\n    onAuthStateChanged(getAuth(), async (user) => {\n        if (user && location.pathname === '/mypage'){\n            uid = user.uid;\n\n            // プロフィールの取得\n            const { getUserData } = await __webpack_require__.e(/*! import() */ \"src_model_userModel_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../model/userModel */ \"./src/model/userModel.js\"));\n            userData = await getUserData(user.uid);\n            document.getElementById('my-icon').src = userData.user_icon;\n            document.getElementById('my-name').innerHTML = userData.user_name;\n            document.getElementById('my-title').value = userData.user_title;\n            document.getElementById('my-title').readOnly = true;\n            const bio = document.getElementById('my-bio-textarea');\n            bio.value = userData.user_bio;\n\n            setMode('view');\n            if (bio.offsetHeight < bio.scrollHeight) {\n                bio.style.height = bio.scrollHeight + 'px';\n            }\n\n            // 登録リストの取得\n            const { getLists } = await __webpack_require__.e(/*! import() */ \"src_model_listModel_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../model/listModel */ \"./src/model/listModel.js\"));\n            lists = await getLists(user.uid);\n\n            if (lists.length == 0) {\n                document.getElementById('my-list-unregistered').style.display = 'block';\n            } else {\n                document.getElementById('my-list-unregistered').style.display = 'none';\n            }\n\n            preLists = JSON.stringify(lists);\n            preLists = JSON.parse(preLists);\n            preUserData = JSON.stringify(userData);\n            preUserData = JSON.parse(preUserData);\n            setLists();\n            setEvents();\n        } else {\n            console.log('logouted');\n            routing('');\n        }\n    });\n}\n\n// 表示モード切り替え処理\nconst setMode = async (_mode) => {\n    const { setView } = await __webpack_require__.e(/*! import() */ \"src_view_mypageView_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../view/mypageView */ \"./src/view/mypageView.js\"));\n    mode = _mode;\n    setView(_mode);\n} \n\n// listsをHTMLに追加\nconst setLists = async () => {\n    document.getElementById('yet-list-container').innerHTML = '';\n    document.getElementById('done-list-container').innerHTML = '';\n\n    yetLists = lists.filter(list => !list.check && !list.removed);\n    yetLists.sort((a, b) => a.order - b.order);\n    yetLists.forEach(list => {\n        addList(list.id, list.name, list.check);\n    });\n\n    doneLists = lists.filter(list => list.check && !list.removed);\n    doneLists.sort((a, b) => a.timestamp - b.timestamp);\n    doneLists.forEach(list => {\n        addList(list.id, list.name, list.check);\n    });\n}\n\nconst setEvents = async () => {\n    // ---------- 共有ボタン押下時 ----------\n    document.getElementById('my-share-button-img').onclick = async () => {\n        document.getElementById('my-popup').style.display = 'flex';\n    };\n\n    // ---------- 編集ボタン押下時 ----------\n    document.getElementById('my-edit-button-img').onclick = () => {\n        setMode('edit');\n    };\n\n    // タイトル編集時\n    const title = document.getElementById('my-title');\n    document.getElementById('my-title').oninput = (e) => {\n        userData.user_title = e.target.value;\n    }\n    \n    // bio編集時\n    const text = document.getElementById('my-bio-text');\n    document.getElementById('my-bio-textarea').oninput = (e) => {\n        if (e.target.offsetHeight < e.target.scrollHeight) {\n            e.target.style.height = e.target.scrollHeight + 'px';\n        }\n        userData.user_bio = e.target.value;\n    }\n\n    // ---------- +ボタン押下時 ----------\n    document.getElementById('add-list-wrapper').onclick = () => {\n        document.getElementById('my-text-edit-area').value = \"\";\n        setMode('add');\n    };\n\n    // ---------- 追加ボタン押下時 ----------\n    document.getElementById('my-add-submit-button').onclick = async () => {\n        let newlist = document.getElementById('my-text-edit-area').value;\n        if (newlist) {\n            yetLists.push({\n                id: 'aaa',\n                name: newlist,\n                check: false,\n                removed: false,\n                order: yetLists.length\n            })\n            addList('aaa', newlist, false);\n        }\n        setMode('edit');\n    };\n\n    // ---------- リネーム完了ボタン押下時 ----------\n    document.getElementById('my-rename-submit-button').onclick = async () => {\n        let newname = document.getElementById('my-text-edit-area');\n        if (newname.value) {\n            const find = yetLists.filter(list => list.id === newname.name);\n            find[0].name = newname.value;\n            document.querySelector('#id-' + newname.name + ' .list-text-box').innerHTML = newname.value;\n        }\n        setMode('edit');\n    };\n\n    // ---------- キャンセルボタン押下時 ----------\n    document.getElementById('my-input-cancel').onclick = async () => {\n        setMode('edit');\n    };\n\n    // ---------- 編集キャンセルボタン押下時 ----------\n    document.getElementById('my-edit-cancel-button-img').onclick = async () => {\n        lists = JSON.stringify(preLists);\n        lists = JSON.parse(lists);\n        setLists();\n        setMode('view');\n    };\n\n    // ---------- 完了ボタン押下時 ----------\n    document.getElementById('my-save-button-img').onclick = async () => {\n        const { saveData } = await __webpack_require__.e(/*! import() */ \"src_model_listModel_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../model/listModel */ \"./src/model/listModel.js\"));\n        await saveData(uid, yetLists, doneLists);\n        lists = yetLists.concat(doneLists);\n        const { checkUserData, updateUserData} = await __webpack_require__.e(/*! import() */ \"src_model_userModel_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../model/userModel */ \"./src/model/userModel.js\"));\n        if (checkUserData(preUserData, userData)) {\n            updateUserData(userData);\n        }\n        document.getElementById('my-popup').style.display = 'flex';\n\n        if (lists.length == 0) {\n            document.getElementById('my-list-unregistered').style.display = 'block';\n        } else {\n            document.getElementById('my-list-unregistered').style.display = 'none';\n        }\n\n        setLists();\n        setMode('view');\n    };\n\n    document.getElementById('my-popup-twitter').onclick = () => {\n        document.getElementById('my-popup').style.display = 'none';\n        const url = \"https://campa-room.web.app/show/\" + uid;\n        const text = \"行きたいとこリストを更新しました!\";\n        const hashtag = \"行きたいとこリスト\";\n        location.href = 'http://twitter.com/share?url=' + url + '&text=' + text + '&hashtags=' + hashtag;\n    };\n\n    document.getElementById('my-popup-copylink').onclick = () => {\n        document.getElementById('my-popup').style.display = 'none';\n        navigator.clipboard.writeText(\"https://campa-room.web.app/show/\" + uid);\n    };\n\n    document.getElementById('my-popup-close').onclick = () => {\n        document.getElementById('my-popup').style.display = 'none';\n    };\n\n}\n\nconst addList = async (id, name, check) => {\n    let listParent = document.createElement('div');\n    listParent.setAttribute('class', 'list-parent');\n    listParent.setAttribute('id', 'id-' + id);\n\n    let listDelete = document.createElement('div');\n    listDelete.setAttribute('class', 'list-delete-button');\n    listParent.appendChild(listDelete);\n\n    let listWrapper = document.createElement('div');\n    listWrapper.setAttribute('class', 'list-wrapper');\n    listParent.appendChild(listWrapper);\n\n    let checkBox = document.createElement('img');\n    if (check) {\n        checkBox.setAttribute('src', '/data/done.svg');\n        checkBox.setAttribute('class', 'list-check-box-done');\n    } else {\n        checkBox.setAttribute('src', '/data/yet.svg');\n        checkBox.setAttribute('class', 'list-check-box-yet');\n\n        checkBox.onclick = () => {\n            if (mode == 'edit') {\n                const find = yetLists.filter(list => list.id === id);\n                console.log(find[0])\n                if (find[0].check) {\n                    checkBox.setAttribute('src', '/data/yet.svg');\n                    find[0].check = false;\n                } else {\n                    checkBox.setAttribute('src', '/data/done.svg');\n                    find[0].check = true;\n                }\n            }\n        };\n    }\n    \n    listWrapper.appendChild(checkBox);\n\n    let textBox = document.createElement('div');\n    if (check) {\n        textBox.setAttribute('class', 'list-text-box');\n    } else {\n        textBox.setAttribute('class', 'list-text-box my-editable');\n    }\n    \n    \n    let listText = document.createTextNode(name);\n    textBox.appendChild(listText);\n\n    // チェック有無で表示切り替え\n    if (check) {\n        textBox.style.color = '#C3C3C3';\n    } else {\n        textBox.style.color = '#000';\n    }\n    listWrapper.appendChild(textBox);\n\n    // 並べ替えボタン\n    // if (!check) {\n    //     let sortButton = document.createElement('img');\n    //     sortButton.setAttribute('src', '/data/sort.svg');\n    //     sortButton.setAttribute('class', 'list-sort-button my-edit-mode');\n    //     listWrapper.appendChild(sortButton);\n\n    //     sortButton.ontouchstart = (e) => {\n    //         let touchX = e.touches[0].clientX;\n    //         let touchY = e.touches[0].clientY;\n    //         let move = true;\n    //         document.body.style.overflow = 'hidden';\n    //         sortButton.ontouchmove = (e) => {\n    //             if (mode === 'edit') {\n    //                 if (50 < Math.abs(e.touches[0].clientX - touchX)) {\n    //                     move = false;\n    //                 }\n    //                 if (move) {\n    //                     let moveY = e.touches[0].clientY - touchY;\n    //                     listParent.style.top = moveY + 'px';\n    //                     listParent.style.zIndex = 1;\n    //                 }\n    //             }\n    //         }\n    //         sortButton.ontouchend = () => {\n    //             document.body.style.overflow = 'auto';\n    //             listParent.style.top = 0;\n    //             listParent.style.zIndex = 0;\n    //         }\n    //     }\n    // }\n\n    // 場所の名前変更\n    if (!check) {\n        textBox.onclick = () => {\n            if (mode === 'edit') {\n                const find = yetLists.filter(list => list.id === id);\n                document.getElementById('my-text-edit-area').value = find[0].name;\n                document.getElementById('my-text-edit-area').name = id;\n                setMode('rename');\n            }\n        }\n    }\n    \n    \n    \n    listWrapper.ontouchstart = (e) => {\n        listWrapper.style.background = '#EEEEEE';\n        \n        let touchX = e.touches[0].clientX;\n        let touchY = e.touches[0].clientY;\n        let move = true;\n        listWrapper.ontouchmove = (e) => {\n            \n            if (mode === 'edit') {\n                if (50 < Math.abs(e.touches[0].clientY - touchY)) {\n                    move = false;\n                    \n                }\n                if (move) {\n                    let moveX = e.touches[0].clientX - touchX;\n                    if (moveX < 0) {\n                        listWrapper.style.left = moveX + 'px';\n                    }\n                }\n            }\n            \n        };\n        listWrapper.ontouchend = () => {\n            let height = 60;\n            listWrapper.style.background = '#FFFFFF';\n            if (mode === 'edit') {\n                if (listWrapper.offsetLeft < 0) {\n                    const loop = () => {\n                        if (Math.abs(listWrapper.offsetLeft) < 3) {\n                            listWrapper.style.left = '0px';\n                        } else \n                        if (- document.body.clientWidth / 2 < listWrapper.offsetLeft) {\n                            requestAnimationFrame(loop);\n                            let returnX = listWrapper.offsetLeft + 5;\n                            listWrapper.style.left = returnX + 'px';\n                        } else \n                        if (- document.body.clientWidth < listWrapper.offsetLeft) {\n                            requestAnimationFrame(loop);\n                            let returnX = listWrapper.offsetLeft - 10;\n                            listWrapper.style.left = returnX + 'px';\n                        } else \n                        if (listWrapper.offsetLeft <= - document.body.clientWidth) {\n                            if (0 < height) {\n                                requestAnimationFrame(loop);\n                            } else {\n                                listDelete.parentElement.style.display = 'none';\n                            }\n                            \n                            let find;\n                            find = yetLists.filter(list => list.id === listDelete.parentElement.id.substr(3));\n                            if (find.length == 0) {\n                                find = doneLists.filter(list => list.id === listDelete.parentElement.id.substr(3));\n                            }\n                            find[0].removed = true;\n                            \n                            height -= 4;\n                            listDelete.parentElement.style.height = height + 'px';\n                        }\n                        \n                    }\n                    loop();\n                }\n                \n            }\n        };\n        \n    };\n\n    let listContainer;\n    if (check) {\n        listContainer = document.getElementById('done-list-container');\n    } else {\n        listContainer = document.getElementById('yet-list-container');\n    }\n    \n    listContainer.prepend(listParent);\n}\n\n//# sourceURL=webpack://listapp/./src/controller/pages/mypageController.js?");

/***/ })

}]);