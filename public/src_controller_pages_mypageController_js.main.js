"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunklistapp"] = self["webpackChunklistapp"] || []).push([["src_controller_pages_mypageController_js"],{

/***/ "./src/controller/pages/mypageController.js":
/*!**************************************************!*\
  !*** ./src/controller/pages/mypageController.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"showMypage\": () => (/* binding */ showMypage)\n/* harmony export */ });\n// マイページ\nlet mode;\nlet uid;\nlet lists = [];\nlet yetLists = [];\nlet doneLists = [];\n\nconst showMypage = async () => {\n    mode = 'view';\n    let displayName, icon;\n    \n    const { getAuth, onAuthStateChanged } = await Promise.all(/*! import() */[__webpack_require__.e(\"vendors-node_modules_firebase_app_dist_esm_index_esm2017_js\"), __webpack_require__.e(\"vendors-node_modules_firebase_auth_dist_index_esm_js\")]).then(__webpack_require__.bind(__webpack_require__, /*! firebase/auth */ \"./node_modules/firebase/auth/dist/index.esm.js\"));\n    const { routing } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ../pageController */ \"./src/controller/pageController.js\"));\n\n    // ---------- マイページアクセス時 ----------\n    // ログイン状態の確認\n    onAuthStateChanged(getAuth(), async (user) => {\n        if (user){\n            uid = user.uid;\n            displayName = user.displayName;\n            icon = user.photoURL;\n            \n            document.getElementById(\"my-icon\").src = icon;\n            document.getElementById(\"my-name\").innerHTML = displayName;\n            document.getElementById(\"top-page\").style.display = 'none';\n            document.getElementById(\"my-page\").style.display = 'block';\n            document.getElementById(\"show-page\").style.display = 'none';\n            document.getElementById(\"how-page\").style.display = 'none';\n\n            // 登録リストの取得\n            const { getLists } = await __webpack_require__.e(/*! import() */ \"src_model_list_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../model/list */ \"./src/model/list.js\"));\n            lists = await getLists(uid);\n            await setLists();\n            setEvents();\n        } else {\n            console.log('logouted');\n            routing('');\n        }\n    });\n}\n\n// listsをHTMLに追加\nconst setLists = async () => {\n    document.getElementById(\"yet-list-container\").innerHTML = \"\";\n    document.getElementById(\"done-list-container\").innerHTML = \"\";\n    const { addList } = await __webpack_require__.e(/*! import() */ \"src_view_mypageView_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../view/mypageView */ \"./src/view/mypageView.js\"));\n    \n    yetLists = lists.filter(list => !list.check);\n    yetLists.forEach(list => {\n        addList(list.id, list.name, list.check);\n    });\n\n    doneLists = lists.filter(list => list.check);\n    doneLists.forEach(list => {\n        addList(list.id, list.name, list.check);\n    });\n    console.log(lists)\n    console.log(yetLists)\n    console.log(doneLists)\n8}\n\nconst setEvents = () => {\n    // ---------- 編集ボタン押下時 ----------\n    const editContents = document.getElementsByClassName('my-edit-mode');\n    const editContentsNum = editContents.length;\n    const viewContents = document.getElementsByClassName('my-view-mode');\n    const viewContentsNum = viewContents.length;\n    const addContents = document.getElementsByClassName('my-add-mode');\n    const addContentsNum = addContents.length;\n    document.getElementById('my-edit-button-img').addEventListener('click', () => {\n        mode = 'edit';\n        console.log('edit-mode');\n        for (let i = 0; i < editContentsNum; i++) {\n            editContents[i].style.display = 'block';\n        }\n        for (let i = 0; i < viewContentsNum; i++) {\n            viewContents[i].style.display = 'none';\n        }\n    }, false);\n\n    // ---------- +ボタン押下時 ----------\n    document.getElementById('add-list-wrapper').addEventListener('click', () => {\n        mode = 'add';\n        console.log('add-mode');\n        for (let i = 0; i < addContentsNum; i++) {\n            addContents[i].style.display = 'block';\n        }\n    }, false);\n\n    // ---------- 追加ボタン押下時 ----------\n    document.getElementById('my-add-submit-button').addEventListener('click', async () => {\n        mode = 'edit';\n        console.log('edit-mode');\n        for (let i = 0; i < addContentsNum; i++) {\n            addContents[i].style.display = 'none';\n        }\n\n        let newlist = document.getElementById(\"my-add-input\").value;\n        if (newlist) {\n            yetLists.push({\n                id: 'aaa',\n                name: newlist,\n                check: false,\n                removed: false\n            })\n            const { addList } = await __webpack_require__.e(/*! import() */ \"src_view_mypageView_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../view/mypageView */ \"./src/view/mypageView.js\"));\n            addList('aaa', newlist, false);\n        }\n        \n    }, false);\n\n    // ---------- チェックボタン押下時 ----------\n    const checkBox = document.getElementsByClassName('list-check-box-yet');\n    const checkBoxNum = checkBox.length;\n    for (let i = 0; i < checkBoxNum; i++) {\n        checkBox[i].addEventListener('click', () => {\n            // 編集モードの時にチェックを有効にする\n            if (mode === 'edit') {\n                const find = yetLists.filter(list => list.id === checkBox[i].parentElement.id);\n                if (find[0].check) {\n                    find[0].check = false;\n                    checkBox[i].setAttribute(\"src\", \"./data/yet.svg\");\n                } else {\n                    find[0].check = true;\n                    checkBox[i].setAttribute(\"src\", \"./data/done.svg\");\n                }\n            }\n        }, false);\n    }\n\n\n    // ---------- 完了ボタン押下時 ----------\n    document.getElementById('my-save-button-img').addEventListener('click', async () => {\n        mode = 'view';\n        console.log('view-mode');\n        for (let i = 0; i < editContentsNum; i++) {\n            editContents[i].style.display = 'none';\n        }\n        for (let i = 0; i < viewContentsNum; i++) {\n            viewContents[i].style.display = 'block';\n        }\n        const { saveData } = await __webpack_require__.e(/*! import() */ \"src_model_list_js\").then(__webpack_require__.bind(__webpack_require__, /*! ../../model/list */ \"./src/model/list.js\"));\n        await saveData(uid, yetLists, doneLists);\n        lists = yetLists.concat(doneLists);\n        setLists();\n    }, false);\n}\n\n//# sourceURL=webpack://listapp/./src/controller/pages/mypageController.js?");

/***/ })

}]);